#!/bin/bash

# Sets and prints the contents of the clipboard. If any parameters
# or input content are provided, those are copied to the clipboard
# and then printed.

# If both parameters and input are provided both are saved to the
# clipboard separated by a space or by a newline if the piped content
# contains more that a single line. In both cases parameters are placed
# first.

hasPipe=false
if [[ ! -t 0 ]]; then
	hasPipe=true
	piped=`cat`
	pipedLines=$(echo "$piped" | wc -l | tr -d [:blank:])
fi

hasParam=false
if [[ "$@" != '' ]]; then
	hasParam=true
fi

if [[ $hasPipe = true || $hasParam = true ]]; then
	# there was some input
	if [[ $hasPipe = true && $hasParam = true ]]; then
		separator=' '
		if [[ $pipedLines > 1 ]]; then
			separator=$'\n'
		fi

		input="$@$separator$piped"
	else
		input="$@$piped"
	fi
	
	if [[ $(uname) == 'Darwin' ]]; then
		# -n flag used to not print the trailing newline
		echo -n "$input" | pbcopy
	fi
fi

# Printing what was just copied
# Or if used without any input, it pastes the clipboard
if [[ $(uname) == 'Darwin' ]]; then
	pbpaste
else
	# Outside of OSX it just prints the input if there was any
	echo "$input"
fi

