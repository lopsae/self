#!/bin/bash

# Run git mergetool using the first matching file found using gick

# `git ls-files --unmerged` will output a lenghty line with file flags,
# object hash, and a stage number for unmerged files.
conflictedFiles=$(git ls-files --unmerged)
conflictedLineCount=$(echo -n "$conflictedFiles" | wc -l)
if [[ $conflictedLineCount -le 0 ]]; then
	echo "No conflicted files found" >&2
	exit 1
fi

# First cut removes flags and object hash
# Second cut removes the stage number
conflictedFiles=$(echo -n "$conflictedFiles" | cut -c 49- | grep ^1 | cut -c 3-)
relativePath=$(git rev-parse --show-cdup)
conflictedFiles=$(echo "$conflictedFiles" | sed -e "s:^:$relativePath:")

if [[ $# -le 0 ]]; then
	echo "$conflictedFiles"
	exit 1
fi

fileFound=$(echo "$conflictedFiles" | pick "$@" 2> /dev/null)

if [[ $? -ne 0 ]]; then
	echo 'No file found' >&2
	exit 1
fi

echo "solve '$fileFound'"
git mergetool --no-prompt -- "$fileFound"

# TODO seems like merge tool uses relative paths, no absolute GODDAMIT
# using `golve` from a subdirectory does not work

